@page "/shop-selector"
@inject NavigationManager NavigationManager
@inject IShoppingCartService ShoppingCartService

<h3>Shop Selector</h3>

<div class="box-select">
    <label for="shopList">Select a Shop:</label>
    <div class="box-select-dropdown">
        <span class="box-selected-item">@selectedShop</span>
        <select id="shopList" @onchange="OnShopSelected">
            <option value="" disabled selected>Select a Shop</option>
            @foreach (var shop in shops)
            {
                <option value="@shop">@shop</option>
            }
        </select>
        <div class="custom-select-arrow">
            <i class="fas fa-caret-down"></i>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(selectedShop) && shopItems.ContainsKey(selectedShop))
{
    <div class="shop-selection-box">
        <h4 class="shop-title">Items in @selectedShop:</h4>
        <ul class="shop-item-list">
            @foreach (var item in shopItems[selectedShop])
            {
                <li class="shop-item">
                    <img src="@item.ImageUrl" alt="Shop Image" width="100" height="100" />
                    <div class="item-details">
                        <h5>@item.Name</h5>
                        <p class="item-price">Price: $@item.Price</p>
                        <button class="add-to-cart-button" @onclick="() => AddToCart(item)">Add to Cart</button>
                    </div>
                </li>
            }
        </ul>
    </div>
}
else
{
    <p>No shop selected or shop not found.</p>
}

<div>
    <h4>Shopping Cart:</h4>
    <div class="cart-items-container">
        @if (ShoppingCartService.ShoppingCartItems.Count > 0)
        {
            @foreach (var cartItem in ShoppingCartService.ShoppingCartItems)
            {
                <div class="cart-item">
                    <img src="@cartItem.ImageUrl" alt="Shop Image" width="50" height="50" />
                    <div class="item-details">
                        <h6>@cartItem.Name</h6>
                        <p>Price: $@cartItem.Price</p>
                    </div>
                </div>
            }
            <button class="checkout-button" @onclick="Checkout">Checkout</button>
        }
        else
        {
            <p>Your shopping cart is empty.</p>
        }
    </div>
</div>

@code {
    private string? selectedShop;
    private List<string> shops = new List<string>
    {
        "Sweets & Softs",
        "Happy Meat",
        "Bakers Goods"
    };

    private Dictionary<string, List<ShopItem>> shopItems = new Dictionary<string, List<ShopItem>>
    {
        {
            "Sweets & Softs",
            new List<ShopItem>
            {
                new ShopItem
                {
                    Name = "Item 1",
                    ImageUrl = "Images/Item 1.jpg",
                    Price = 10.99
                },
                new ShopItem
                {
                    Name = "Item 2",
                    ImageUrl = "Images/Item 2.jpg",
                    Price = 15.99
                },
            }
        },
        {
            "Happy Meat",
            new List<ShopItem>
            {
                new ShopItem
                {
                    Name = "Item 3",
                    ImageUrl = "Images/Item 3.jpg",
                    Price = 8.99
                },
                new ShopItem
                {
                    Name = "Item 4",
                    ImageUrl = "Images/Item 4.jpg",
                    Price = 12.49
                }
            }
        },
        {
            "Bakers Goods",
            new List<ShopItem>
            {
                new ShopItem
                {
                    Name = "Item 5",
                    ImageUrl = "Images/Item 5.jpg",
                    Price = 9.99
                },
                new ShopItem
                {
                    Name = "Item 6",
                    ImageUrl = "Images/Item 6.jpg",
                    Price = 14.99
                },
            }
        },
    };

    private List<ShopItem> shoppingCart = new List<ShopItem>();

    private void OnShopSelected(ChangeEventArgs e)
    {
        selectedShop = e.Value.ToString();
    }

    private void AddToCart(ShopItem item)
    {
        ShoppingCartService.AddToCart(item);
        StateHasChanged(); // Force re-render
    }

    private void Checkout()
    {
        if (!string.IsNullOrEmpty(selectedShop) && ShoppingCartService.ShoppingCartItems.Count > 0)
        {
            NavigationManager.NavigateTo("/checkout");
        }
    }

}